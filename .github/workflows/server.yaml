name: server

on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  merge_group:
      branches: [ main ]

jobs:
  server-build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Setting up rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: clippy, rustfmt
      
    - name: Checking if it builds without errors (default feature)
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --manifest-path server/Cargo.toml -- -D warnings

    - name: Checking if code is formatted
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all --manifest-path server/Cargo.toml -- --check
    
    - name: Checking if it builds without errors (default feature)
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --manifest-path server/Cargo.toml

    - name: Generate code coverage
      run: |
        cargo install cargo-tarpaulin
        cargo tarpaulin --manifest-path server/Cargo.toml --verbose --workspace --timeout 120 --out Xml --run-types Tests --run-types Doctests

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
